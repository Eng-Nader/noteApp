include: package:flutter_lints/flutter.yaml

analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
  
  strong-mode:
    implicit-casts: false
    implicit-dynamic: false
  
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true

linter:
  rules:
    # Style Rules
    - camel_case_types
    - camel_case_extensions
    - file_names
    - library_names
    - library_prefixes
    - non_constant_identifier_names
    - constant_identifier_names
    - curly_braces_in_flow_control_structures
    - slash_for_doc_comments
    - package_api_docs
    - public_member_api_docs
    
    # Error Prevention
    - avoid_empty_else
    - avoid_print
    - avoid_returning_null_for_void
    - avoid_unused_constructor_parameters
    - empty_catches
    - empty_constructor_bodies
    - empty_statements
    - no_duplicate_case_values
    - throw_in_finally
    - unnecessary_statements
    
    # Flutter Specific
    - avoid_web_libraries_in_flutter
    - use_build_context_synchronously
    - use_key_in_widget_constructors
    - avoid_unnecessary_containers
    - sized_box_for_whitespace
    - avoid_returning_widgets
    
    # Async/Await
    - avoid_slow_async_io
    - cancel_subscriptions
    - close_sinks
    - unawaited_futures
    
    # Performance
    - avoid_function_literals_in_foreach_calls
    - prefer_const_constructors
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - prefer_final_fields
    - prefer_final_locals
    - prefer_final_in_for_each
    
    # Code Quality
    - always_declare_return_types
    - always_put_control_body_on_new_line
    - always_put_required_named_parameters_first
    - annotate_overrides
    - avoid_bool_literals_in_conditional_expressions
    - avoid_catches_without_on_clauses
    - avoid_catching_errors
    - avoid_double_and_int_checks
    - avoid_field_initializers_in_const_classes
    - avoid_init_to_null
    - avoid_null_checks_in_equality_operators
    - avoid_positional_boolean_parameters
    - avoid_redundant_argument_values
    - avoid_renaming_method_parameters
    - avoid_return_types_on_setters
    - avoid_single_cascade_in_expression_statements
    - avoid_types_as_parameter_names
    - avoid_void_async
    - cascade_invocations
    - directives_ordering
    - implementation_imports
    - join_return_with_assignment
    - leading_newlines_in_multiline_strings
    - missing_whitespace_between_adjacent_strings
    - no_adjacent_strings_in_list
    - omit_local_variable_types
    - one_member_abstracts
    - only_throw_errors
    - overridden_fields
    - parameter_assignments
    - prefer_adjacent_string_concatenation
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_contains
    - prefer_equal_for_default_values
    - prefer_expression_function_bodies
    - prefer_for_elements_to_map_fromIterable
    - prefer_function_declarations_over_variables
    - prefer_if_null_operators
    - prefer_initializing_formals
    - prefer_inlined_adds
    - prefer_interpolation_to_compose_strings
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_iterable_whereType
    - prefer_null_aware_operators
    - prefer_single_quotes
    - prefer_spread_collections
    - prefer_typing_uninitialized_variables
    - provide_deprecation_message
    - sort_child_properties_last
    - sort_constructors_first
    - sort_unnamed_constructors_first
    - type_annotate_public_apis
    - unnecessary_await_in_return
    - unnecessary_brace_in_string_interps
    - unnecessary_const
    - unnecessary_getters_setters
    - unnecessary_lambdas
    - unnecessary_new
    - unnecessary_null_aware_assignments
    - unnecessary_null_in_if_null_operators
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_raw_strings
    - unnecessary_string_escapes
    - unnecessary_string_interpolations
    - unnecessary_this
    - use_function_type_syntax_for_parameters
    - use_rethrow_when_possible
    - valid_regexps
    - void_checks